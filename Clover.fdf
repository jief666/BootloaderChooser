## @file
# This is DUET FDF file with UEFI HII features enabled
#
# Copyright (c) 2007 - 2011, Intel Corporation. All rights reserved.<BR>
#
#    This program and the accompanying materials
#    are licensed and made available under the terms and conditions of the BSD License
#    which accompanies this distribution. The full text of the license may be found at
#    http://opensource.org/licenses/bsd-license.php
#
#    THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#    WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
# Clover EFI FDF file to be differ from DUET
################################################################################
#
# FV Section
#
# [FV] section is used to define what components or modules are placed within a flash
# device file.  This section also defines order the components and modules are positioned
# within the image.  The [FV] section consists of define statements, set statements and
# module statements.
#
################################################################################
[Defines]
!if ($(ARCH) == X64)

[FV.DuetEfiMainFvX64]

!elseif ($(ARCH) == IA32)

[FV.DuetEfiMainFvIA32]

!else 
[FV.DuetEfiMainFvEBC]

!endif

BlockSize          = 0x10000
NumBlocks          = 0x2a
FvAlignment        = 16         #FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE

#APRIORI PEI {
#  INF  MdeModulePkg/Universal/ReportStatusCodeRouter/Pei/ReportStatusCodeRouterPei.inf
#  INF  MdeModulePkg/Universal/StatusCodeHandler/Pei/StatusCodeHandlerPei.inf
#  INF  MdeModulePkg/Universal/PCD/Pei/Pcd.inf
#  }

#APRIORI DXE {
#  INF  MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
#  INF  PcAtChipsetPkg/8259InterruptControllerDxe/8259.inf
#  INF  Protocols/MsgLog/MsgLog.inf
#}

#INF  MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
#INF  MdeModulePkg/Universal/WatchdogTimerDxe/WatchdogTimer.inf
#INF  MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
#INF  MdeModulePkg/Universal/MonotonicCounterRuntimeDxe/MonotonicCounterRuntimeDxe.inf

#INF  DuetPkg/FSVariable/FSVariable.inf
!ifdef REAL_NVRAM
#  INF MdeModulePkg/Universal/FaultTolerantWriteDxe/FaultTolerantWriteDxe.inf
#  INF MdeModulePkg/Universal/Variable/RuntimeDxe/VariableRuntimeDxe.inf
!else
!ifdef HAVE_LEGACY_EMURUNTIMEDXE
#  INF  MdeModulePkg/Universal/Variable/EmuRuntimeDxe/EmuVariableRuntimeDxe.inf
!else
#  INF MdeModulePkg/Universal/Variable/RuntimeDxe/VariableRuntimeDxe.inf
!endif
!endif

INF  MdeModulePkg/Universal/CapsuleRuntimeDxe/CapsuleRuntimeDxe.inf
INF  MdeModulePkg/Universal/MemoryTest/NullMemoryTestDxe/NullMemoryTestDxe.inf
INF  MdeModulePkg/Universal/SecurityStubDxe/SecurityStubDxe.inf
INF  MdeModulePkg/Universal/Console/ConPlatformDxe/ConPlatformDxe.inf
INF  MdeModulePkg/Universal/Console/ConSplitterDxe/ConSplitterDxe.inf
INF  MdeModulePkg/Universal/HiiDatabaseDxe/HiiDatabaseDxe.inf
INF  MdeModulePkg/Universal/SetupBrowserDxe/SetupBrowserDxe.inf
INF  MdeModulePkg/Universal/DisplayEngineDxe/DisplayEngineDxe.inf

#INF  MdeModulePkg/Universal/Console/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
#INF  CloverEFI/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
#INF  MdeModulePkg/Universal/Console/TerminalDxe/TerminalDxe.inf
INF  MdeModulePkg/Universal/SmbiosDxe/SmbiosDxe.inf
#INF  DuetPkg/SmbiosGenDxe/SmbiosGen.inf
#INF  OsxSmbiosDxe/SmbiosDxe.inf
#INF  CloverEFI/OsxSmbiosGenDxe/SmbiosGen.inf
#INF  IntelFrameworkModulePkg/Universal/BdsDxe/BdsDxe.inf
#INF  CloverEFI/OsxBdsDxe/BdsDxe.inf
INF  MdeModulePkg/Universal/EbcDxe/EbcDxe.inf
INF  MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf
#INF  UefiCpuPkg/CpuIo2Dxe/CpuIo2Dxe.inf
#INF  UefiCpuPkg/CpuDxe/CpuDxe.inf

#INF  IntelFrameworkModulePkg/Universal/CpuIoDxe/CpuIoDxe.inf
#INF  CloverEFI/CpuDxe/Cpu.inf
!ifndef CLANG
#INF  UefiCpuPkg/CpuDxe/CpuDxe.inf
!else
#INF  RuleOverride=BINARY CpuDxeBin/CpuDxeBin.inf
!endif

    # DataHub
#INF  VBoxAppleSim/VBoxAppleSim.inf
#INF Protocols/DataHubDxe/DataHubDxe.inf
#INF Protocols/DataHubStdErrDxe/DataHubStdErrDxe.inf
#INF EdkCompatibilityPkg/Compatibility/PiSmbiosRecordOnDataHubSmbiosRecordThunk/PiSmbiosRecordOnDataHubSmbiosRecordThunk.inf
	# foreign file system support
#INF  Protocols/DriverOverride/DriverOverride.inf	
!ifndef NO_GRUB_DRIVERS_EMBEDDED
!ifndef NO_GRUB_DRIVERS
#INF  FileSystems/GrubFS/src/EXFAT.inf	
#INF  FileSystems/GrubFS/src/NTFS.inf
!endif
!endif
#INF  FileSystems/VBoxFsDxe/VBoxFsDxe.inf
#INF  FileSystems/VBoxFsDxe/VBoxIso9660.inf
#INF  FileSystems/VBoxFsDxe/VBoxExt2.inf
#INF  FileSystems/VBoxFsDxe/VBoxExt4.inf
#INF  FileSystems/VBoxFsDxe/VBoxReiserFS.inf
!if $(USE_APPLE_HFSPLUS_DRIVER) AND ( $(ARCH) == X64 )
#INF  RuleOverride=BINARY FileSystems/HFSPlus/HFSPlus.inf
!else
#INF  FileSystems/VBoxFsDxe/VBoxHfs.inf
!endif

#INF  PcAtChipsetPkg/8259InterruptControllerDxe/8259.inf
#INF  DuetPkg/AcpiResetDxe/Reset.inf
#INF  CloverEFI/AcpiReset/Reset.inf
#INF  DuetPkg/LegacyMetronome/Metronome.inf
INF  MdeModulePkg/Universal/Metronome/Metronome.inf
#INF  PcAtChipsetPkg/8254TimerDxe/8254Timer.inf
#INF  PcAtChipsetPkg/HpetTimerDxe/HpetTimerDxe.inf
#INF  PcAtChipsetPkg/PcatRealTimeClockRuntimeDxe/PcatRealTimeClockRuntimeDxe.inf
#INF CloverEFI/PcatRealTimeClockRuntimeDxe/PcatRealTimeClockRuntimeDxe.inf
#INF  PcAtChipsetPkg/PciHostBridgeDxe/PciHostBridgeDxe.inf
#INF  DuetPkg/PciRootBridgeNoEnumerationDxe/PciRootBridgeNoEnumeration.inf
#INF  CloverEFI/PciRootBridgeDxe/PciRootBridge.inf
#INF  DuetPkg/PciBusNoEnumerationDxe/PciBusNoEnumeration.inf
#INF  CloverEFI/OsxPciBusNoEnumerationDxe/PciBusNoEnumeration.inf
#INF  MdeModulePkg/Bus/Pci/PciBusDxe/PciBusDxe.inf
#INF  CloverEFI/PciBusDxe/PciBusDxe.inf

    # Video
#INF  IntelFrameworkModulePkg/Bus/Pci/VgaMiniPortDxe/VgaMiniPortDxe.inf
#INF  VBoxVgaMiniPort/VgaMiniPortDxe.inf
#INF  IntelFrameworkModulePkg/Universal/Console/VgaClassDxe/VgaClassDxe.inf
#INF  VgaClassDxe/VgaClassDxe.inf
#INF  DuetPkg/BiosVideoThunkDxe/BiosVideo.inf
#INF  CloverEFI/BiosVideo/BiosVideo.inf
#INF  BiosVideoAuto/BiosVideo.inf
#INF  IntelGmaDxe/Gop.inf
#INF  LegacyBios/VideoDxe/VideoDxe.inf

    # BIOS CSM
#INF  IntelFrameworkModulePkg/Csm/LegacyBiosDxe/LegacyBiosDxe.inf
#INF  IntelFrameworkModulePkg/Csm/BiosThunk/BlockIoDxe/BlockIoDxe.inf
#INF  IntelFrameworkModulePkg/Csm/BiosThunk/KeyboardDxe/KeyboardDxe.inf
#INF  CloverEFI/BiosKeyboard/KeyboardDxe.inf
#INF  IntelFrameworkModulePkg/Universal/LegacyRegionDxe/LegacyRegionDxe.inf
#INF  MdeModulePkg/Universal/LegacyRegion2Dxe/LegacyRegion2Dxe.inf
#INF  LegacyBios/RegionDxe/LegacyRegion2Dxe.inf
#INF   LegacyBios/Region2Dxe/LegacyRegion2Dxe.inf
#INF  IntelFrameworkModulePkg/Csm/BiosThunk/VideoDxe/VideoDxe.inf

    # IDE/AHCI Support
!ifdef USE_BIOS_BLOCKIO
#  INF  LegacyBios/BlockIoDxe/BlockIoDxe.inf
!ifdef DISABLE_USB_CONTROLLERS_WHEN_BLOCKIO
#  DEFINE DISABLE_USB_CONTROLLERS = 1
!endif

!else
!ifdef USE_ION
	INF  RuleOverride=BINARY ION/ION.inf
!else
  #INF  VBoxIdeControllerDxe/VBoxIdeControllerDxe.inf
  #INF  VBoxIdeBusDxe/VBoxIdeBusDxe.inf
  #INF  DuetPkg/SataControllerDxe/SataControllerDxe.inf
#  INF  Drivers/SataControllerDxe/SataControllerDxe.inf
  #INF  MdeModulePkg/Bus/Ata/AtaAtapiPassThru/AtaAtapiPassThru.inf
#  INF  Drivers/AtaAtapi/AtaAtapiPassThru.inf
  #INF  MdeModulePkg/Bus/Ata/AtaBusDxe/AtaBusDxe.inf
#  INF  Drivers/AtaBus/AtaBusDxe.inf
  #INF  MdeModulePkg/Bus/Scsi/ScsiBusDxe/ScsiBusDxe.inf
#  INF  Drivers/DVDBus/ScsiBusDxe.inf
  #INF  MdeModulePkg/Bus/Scsi/ScsiDiskDxe/ScsiDiskDxe.inf
#  INF  Drivers/DVDDisk/ScsiDiskDxe.inf
  #INF  IntelFrameworkModulePkg/Bus/Pci/IdeBusDxe/IdeBusDxe.inf
!endif  
!endif

    # Usb Support
!ifndef DISABLE_USB_SUPPORT

!ifndef DISABLE_USB_CONTROLLERS
  INF  MdeModulePkg/Bus/Pci/UhciDxe/UhciDxe.inf
!ifndef DISABLE_USB_MASS_STORAGE
  INF  MdeModulePkg/Bus/Pci/EhciDxe/EhciDxe.inf
!endif
!endif

!ifdef ENABLE_USB_OHCI
#  INF  Drivers/OhciDxe/OhciDxe.inf
!endif
!ifdef ENABLE_USB_XHCI
  #INF  MdeModulePkg/Bus/Pci/XhciDxe/XhciDxe.inf
#  INF  Drivers/XhciDxe/XhciDxe.inf
!endif

  #INF  MdeModulePkg/Bus/Usb/UsbBusDxe/UsbBusDxe.inf
#  INF  Drivers/UsbBusDxe/UsbBusDxe.inf
  #INF  MdeModulePkg/Bus/Usb/UsbKbDxe/UsbKbDxe.inf
#  INF  Drivers/UsbKbDxe/UsbKbDxe.inf
  INF  MdeModulePkg/Bus/Usb/UsbMouseDxe/UsbMouseDxe.inf
!ifndef DISABLE_USB_MASS_STORAGE  
  INF  MdeModulePkg/Bus/Usb/UsbMassStorageDxe/UsbMassStorageDxe.inf
!endif  

!endif

    # ISA Support
#INF  PcAtChipsetPkg/IsaAcpiDxe/IsaAcpi.inf
#INF  Drivers/Isa/IsaBusDxe/IsaBusDxe.inf
#INF  Drivers/Isa/IsaSerialDxe/IsaSerialDxe.inf
#INF  Drivers/Isa/Ps2KeyboardDxe/Ps2keyboardDxe.inf
#INF  Drivers/Isa/IsaFloppyDxe/IsaFloppyDxe.inf

INF  MdeModulePkg/Universal/Disk/DiskIoDxe/DiskIoDxe.inf
INF  MdeModulePkg/Universal/Disk/UnicodeCollation/EnglishDxe/EnglishDxe.inf
#INF  MdeModulePkg/Universal/Disk/PartitionDxe/PartitionDxe.inf
#INF  Drivers/PartitionDxe/PartitionDxe.inf

    # ACPI Support
#INF  MdeModulePkg/Universal/Acpi/AcpiTableDxe/AcpiTableDxe.inf
#INF  CloverEFI/OsxAcpiTableDxe/AcpiTableDxe.inf
#INF  MdeModulePkg/Universal/Acpi/AcpiPlatformDxe/AcpiPlatformDxe.inf
#INF  CloverEFI/OsxAcpiPlatformDxe/AcpiPlatformDxe.inf

    # FD
#INF  IntelFrameworkModulePkg/Universal/Acpi/AcpiS3SaveDxe/AcpiS3SaveDxe.inf
#INF  SaveResume/AcpiS3SaveDxe/AcpiS3SaveDxe.inf
#INF  MdeModulePkg/Universal/Acpi/S3SaveStateDxe/S3SaveStateDxe.inf
#INF  MdeModulePkg/Universal/Acpi/SmmS3SaveState/SmmS3SaveState.inf
#INF  MdeModulePkg/Universal/Acpi/BootScriptExecutorDxe/BootScriptExecutorDxe.inf
#INF  SaveResume/BootScriptExecutorDxe/BootScriptExecutorDxe.inf
#INF  UefiCpuPkg/Universal/Acpi/S3Resume2Pei/S3Resume2Pei.inf

    # Misc
#INF  Protocols/MsgLog/MsgLog.inf

    # Binary INF file to support toggle among different CPU architectures.
#INF  RuleOverride=BINARY FatBinPkg/EnhancedFatDxe/Fat.inf
#INF  FileSystems/FatPkg/EnhancedFatDxe/Fat.inf

#FILE FREEFORM = PCD(gEfiIntelFrameworkModulePkgTokenSpaceGuid.PcdLogoFile) {
#	SECTION RAW = Logo/Logo.bmp
#  }

[Rule.Common.SEC]
  FILE SEC = $(NAMED_GUID)  {
    PE32     PE32    Align=32       $(INF_OUTPUT)/$(MODULE_NAME).efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }


[Rule.Common.PEI_CORE]
  FILE PEI_CORE = $(NAMED_GUID) {
    PE32     PE32    Align=32       $(INF_OUTPUT)/$(MODULE_NAME).efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.PEIM]
  FILE PEIM = $(NAMED_GUID) {
     PEI_DEPEX PEI_DEPEX Optional        $(INF_OUTPUT)/$(MODULE_NAME).depex
     PE32      PE32   Align=32       $(INF_OUTPUT)/$(MODULE_NAME).efi
     UI       STRING="$(MODULE_NAME)" Optional
     VERSION  STRING="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }


[Rule.Common.DXE_CORE]
  FILE DXE_CORE = $(NAMED_GUID) {
      PE32     PE32           $(INF_OUTPUT)/$(MODULE_NAME).efi
      UI       STRING ="$(MODULE_NAME)" Optional
      VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.UEFI_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.DXE_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.DXE_RUNTIME_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.UEFI_APPLICATION]
  FILE APPLICATION = $(NAMED_GUID) {
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.UEFI_APPLICATION.BINARY]
  FILE APPLICATION = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
        PE32     PE32                    |.efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

[Rule.Common.UEFI_DRIVER.BINARY]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
        PE32     PE32                    |.efi
    UI       STRING ="$(MODULE_NAME)" Optional
    VERSION  STRING ="$(INF_VERSION)" Optional BUILD_NUM=$(BUILD_NUMBER)
  }

